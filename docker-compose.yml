version: '3'

services:
  web:
    depends_on:
      - api
    build: ./web
    image: web
    container_name: web
    networks:
      - transcendence-network
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - VITE_API_HOST=api
    env_file:
      - ./.production.env
    volumes:
      - ./dataAssets:/app/dist/data

  api:
    depends_on:
      - pgsql
    build: ./api
    image: api
    container_name: api
    networks:
      - transcendence-network
    restart: unless-stopped
    expose:
      - "3000/tcp"
    environment:
      - DATABASE_HOST=pgsql
    env_file:
      - ./.production.env
    volumes:
      - ./dataAssets:/app/data

  pgsql:
    image: postgres:alpine
    ports:
      - '5432:5432'
    container_name: 'pgsql'
    networks:
      - transcendence-network
    restart: always
    env_file:
      - ./.production.env

  adminer:
    image: adminer
    container_name: adminer
    networks:
      - transcendence-network
    restart: always
    ports:
      - 8000:8080

networks:
  transcendence-network:
    driver: bridge
